# Source: http://www.unicode.org/reports/tr44
name: "Unicode Database"
scopeName: "source.ucd.unidata"
fileTypes: [
	# https://unicode.org/Public/UNIDATA/
	"ArabicShaping.txt"
	"BidiBrackets.txt"
	"BidiCharacterTest.txt"
	"BidiMirroring.txt"
	"BidiTest.txt"
	"Blocks.txt"
	"CaseFolding.txt"
	"CJKRadicals.txt"
	"CompositionExclusions.txt"
	"DerivedAge.txt"
	"DerivedCoreProperties.txt"
	"DerivedNormalizationProps.txt"
	"EastAsianWidth.txt"
	"EmojiSources.txt"
	"EquivalentUnifiedIdeograph.txt"
	"HangulSyllableType.txt"
	"Index.txt"
	"IndicPositionalCategory.txt"
	"IndicSyllabicCategory.txt"
	"Jamo.txt"
	"LineBreak.txt"
	"NameAliases.txt"
	"NamedSequences.txt"
	"NamedSequencesProv.txt"
	"NormalizationCorrections.txt"
	"NormalizationTest.txt"
	"NushuSources.txt"
	"PropertyAliases.txt"
	"PropertyValueAliases.txt"
	"PropList.txt"
	"ScriptExtensions.txt"
	"Scripts.txt"
	"SpecialCasing.txt"
	"StandardizedVariants.txt"
	"TangutSources.txt"
	"UnicodeData.txt"
	"USourceData.txt"
	"VerticalOrientation.txt"
	
	# https://unicode.org/Public/UNIDATA/auxiliary/
	"GraphemeBreakProperty.txt"
	"GraphemeBreakTest.txt"
	"LineBreakTest.txt"
	"SentenceBreakProperty.txt"
	"SentenceBreakTest.txt"
	"WordBreakProperty.txt"
	"WordBreakTest.txt"
	
	# https://unicode.org/Public/UNIDATA/emoji/
	"emoji-data.txt"
	"emoji-variation-sequences.txt"
	
	# https://unicode.org/Public/UNIDATA/extracted/
	"DerivedBidiClass.txt"
	"DerivedBinaryProperties.txt"
	"DerivedCombiningClass.txt"
	"DerivedDecompositionType.txt"
	"DerivedEastAsianWidth.txt"
	"DerivedGeneralCategory.txt"
	"DerivedJoiningGroup.txt"
	"DerivedJoiningType.txt"
	"DerivedLineBreak.txt"
	"DerivedName.txt"
	"DerivedNumericType.txt"
	"DerivedNumericValues.txt"
	
	# Unihan (UAX38): http://www.unicode.org/reports/tr38/
	"Unihan_DictionaryIndices.txt"
	"Unihan_DictionaryLikeData.txt"
	"Unihan_IRGSources.txt"
	"Unihan_NumericValues.txt"
	"Unihan_OtherMappings.txt"
	"Unihan_RadicalStrokeCounts.txt"
	"Unihan_Readings.txt"
	"Unihan_Variants.txt"
	
	# Bundled readmes that partially-resemble the databases they document
	"ucd/ReadMe.txt",       "UNIDATA/ReadMe.txt"
	"ucd/emoji/ReadMe.txt", "UNIDATA/emoji/ReadMe.txt"
]
patterns: [{
	# Skip past empty lines and comments
	begin: "\\A(?=#?\\s*$)"
	end:   "(?=^\\s*\\S)(?!^#\\s*$)"
	patterns: [include: "#comment"]
}, include: "#main"]


repository:
	main:
		patterns: [
			{include: "#USourceData"}
			{include: "#Scripts"}
			{include: "#SpecialCasing"}
			{include: "#BidiMirroring"}
			{include: "#Properties"}
			{include: "#UnicodeData"}
			{include: "#comment"}
		]
	
	
	# Line comment, introduced by U+0023 in first column
	comment:
		name:  "comment.line.number-sign.ucd.unidata"
		begin: "#"
		end:   "$"
		beginCaptures:
			1: name: "punctuation.definition.comment.ucd.unidata"
		patterns: [{
			# @missing: 0000..10FFFF; <none>
			name:  "meta.elided-range.ucd.unidata"
			match: "\\G\\s*((@)missing)(:)\\s*([A-F0-9]{4,}(?:\\.\\.[A-F0-9]{4,})?)\\s*(;)\\s*(\\S.*)"
			captures:
				1: name: "storage.type.class.missing.ucd.unidata"
				2: name: "punctuation.definition.block.tag.ucd.unidata"
				3: patterns: [include: "etc#kolon"]
				4: patterns: [include: "#codePoint"]
				5: patterns: [include: "etc#semi"]
				6: name: "entity.name.type.default-value.ucd.unidata"
		},{
			# [BEST FIT] notice
			match: "\\G\\s+((\\[)BEST FIT(\\]))\\s+"
			captures:
				1: name: "storage.modifier.best-fit.ucd.unidata"
				2: patterns: [include: "etc#bracket"]
				3: patterns: [include: "etc#bracket"]
		}, match: "\\b(QUESTION|TODO)\\b"]
	
	
	# Hexadecimal code-point, with or without `U+` prefix
	codePoint:
		patterns: [
			{include: "#codePointRange"}
			{include: "#codePointSingle"}
		]
		
	# 0000;
	codePointSingle:
		name:  "constant.numeric.codepoint.hexadecimal.integer.hex.int.ucd.unidata"
		match: "(?:U\\+)?[0-9A-Fa-f]+"

	# 0000..FFFF;
	codePointRange:
		name:  "meta.range.ucd.unidata"
		match: "((?:U\\+)?[0-9A-Fa-f]+)(\\.\\.)((?:U\\+)?[0-9A-Fa-f]+)"
		captures:
			2: patterns: [include: "etc#dotPair"]
			1: name: "meta.range-start.ucd.unidata", patterns: [include: "#codePointSingle"]
			3: name: "meta.range-end.ucd.unidata",   patterns: [include: "#codePointSingle"]


	# Decomposition field in `UnicodeData.txt`
	decomp:
		patterns: [{
			# <compat>, <circle>, <etc>
			name:  "storage.modifier.$2.ucd.unidata"
			match: "(?:\\G|^|(?<=\\n))(<)([^>;]+)(>)"
			captures:
				1: name: "punctuation.definition.bracket.angle.begin.unidata"
				3: name: "punctuation.definition.bracket.angle.end.unidata"
		}, include: "#codePoint"]

	
	# NOTE: All patterns below are for disambiguating different database formats, which--were
	# it not for headers providing easy identification of each file--would require a separate
	# grammar to be written for each.


	BidiMirroring:
		name:  "meta.bidi-mirroring.ucd.unidata"
		begin: "(?:\\G|\\A|(?:^|(?<=\\n)))(?=# BidiMirroring(?:-\\d+(?:\\.\\d+)*+)?\\.txt\\s*$)"
		end:   "(?=A)B"
		patterns: [{
			# Highlight second column the same as the first
			match: "(?<=;)\\s*([0-9A-F]{4,})(?:\\s+(#.*))?$"
			captures:
				1: patterns: [include: "#codePoint"]
				2: patterns: [include: "#comment"]
		}, include: "#PropertyAssignment"]


	# 2-column format shared by several UCD files:
	#    0009..000D    ; Some_Value  # Comment
	#    000E          ; Some_Value  # Comment
	Properties:
		name:  "meta.${1:/downcase}.ucd.unidata"
		begin: "(?:\\G|\\A|(?:^|(?<=\\n)))(?=# ([A-Z][A-Za-z]+)(?:-\\d+(?:\\.\\d+)*+)?\\.txt\\s*$)"
		end:   "(?=A)B"
		patterns: [include: "#PropertyAssignment"]
	
	
	# Stuff matched inside the aforementioned format
	PropertyAssignment:
		patterns: [
			{include: "#codePoint"}
			{include: "etc#semi"}
			{include: "#comment"}
			{include: "etc#num", match: "(?<=;|^|\\G)\\d+(?:\\.\\d+)?(?=\\s*(?:;|$|#))"}
			{match: "[^;#]+", name: "constant.other.field.ucd.unidata"}
		]


	Scripts:
		name:  "meta.scripts.ucd.unidata"
		begin: "(?:\\G|\\A|(?:^|(?<=\\n)))(?=# Scripts(?:-\\d+(?:\\.\\d+)*+)?\\.txt\\s*$)"
		end:   "(?=A)B"
		patterns: [{
			match: "^([0-9A-F]{4,}(?:\\.\\.[0-9A-F]{4,})?)\\s*(;)\\s*(\\w+)\\s*(#.*)"
			captures:
				1: patterns: [include: "#codePoint"]
				2: patterns: [include: "etc#semi"]
				3: name: "entity.name.tag.script.ucd.unidata"
				4: patterns: [include: "#comment"]
		}, include: "#comment"]


	SpecialCasing:
		name:  "meta.special-casing.ucd.unidata"
		begin: "(?:\\G|\\A|(?:^|(?<=\\n)))(?=# SpecialCasing(?:-\\d+(?:\\.\\d+)*+)?\\.txt\\s*$)"
		end:   "(?=A)B"
		patterns: [{
			name:  "meta.casing-data.ucd.unidata"
			match: """(?x) ^ \\s*
				((?:\\s+(?=;)|\\s*[0-9A-F]{4,}\\s*)*+) (;) # Subject's codepoint
				((?:\\s+(?=;)|\\s*[0-9A-F]{4,}\\s*)*+) (;) # Lowercase mapping
				((?:\\s+(?=;)|\\s*[0-9A-F]{4,}\\s*)*+) (;) # Titlecase mapping
				((?:\\s+(?=;)|\\s*[0-9A-F]{4,}\\s*)*+) (;) # Uppercase mapping
				
				# Optional condition list
				(
					\\s* (?!\\#)
					((?: \\s* [a-z][a-z-]+ \\s*)*+) # BCP 47 IDs
					((?: \\s* [A-Z]\\w+    \\s*)*+) # Casing contexts (?)
					(;)
				)? \\s*
				
				# Trailing comment
				(\\#.*)?
			"""
			captures:
				1:  name: "meta.subject-codepoint.ucd.unidata", patterns: [include: "#codePoint"]
				3:  name: "meta.lowercase-mapping.ucd.unidata", patterns: [include: "#codePoint"]
				5:  name: "meta.titlecase-mapping.ucd.unidata", patterns: [include: "#codePoint"]
				7:  name: "meta.uppercase-mapping.ucd.unidata", patterns: [include: "#codePoint"]
				2:  patterns: [include: "etc#semi"]
				4:  patterns: [include: "etc#semi"]
				6:  patterns: [include: "etc#semi"]
				8:  patterns: [include: "etc#semi"]
				9:  name: "meta.condition-list.ucd.unidata"
				10: patterns: [match: "[a-z]+", name: "entity.name.tag.language.ucd.unidata"]
				11: patterns: [match: "\\w+",   name: "support.constant.casing-context.ucd.unidata"]
				12: patterns: [include: "etc#semi"]
				13: patterns: [include: "#comment"]
		}, include: "#comment"]


	UnicodeData:
		name:  "meta.unicode-data.ucd.unidata"
		begin: "\\G|(?:^|(?<=\\n))(?=[0-9A-F]{4,};(?:[^;]*;){13}$)"
		end:   "(?=A)B"
		patterns: [{
			name: "meta.record.character-data.ucd.unidata"
			match: """(?x) ^
				([0-9A-F]{4,}) # Hexadecimal codepoint
				(;) ([^;]*)    # Official name
				(;) ([^;]*)    # General category
				(;) ([^;]*)    # Combining class
				(;) ([^;]*)    # BIDI category
				(;) ([^;]*)    # Decomposition
				(;) ([^;]*)    # Decimal digit value
				(;) ([^;]*)    # Digit value
				(;) ([^;]*)    # Numeric value
				(;) ([^;]*)    # Mirrored
				(;) ([^;]*)    # Unicode v1 name
				(;) ([^;]*)    # ISO 10646 comment
				(;) ([^;]*)    # Uppercase mapping
				(;) ([^;]*)    # Lowercase mapping
				(;) ([^;]*)    # Titlecase mapping
				$ """
			captures:
				1:  {patterns: [include: "#codePoint"]}
				2:  {patterns: [include: "etc#semi"]}, 3:  {name: "entity.name.character.official.ucd.unidata"}
				4:  {patterns: [include: "etc#semi"]}, 5:  {name: "constant.other.general-category.ucd.unidata"}
				6:  {patterns: [include: "etc#semi"]}, 7:  {name: "constant.other.combining-class.ucd.unidata"}
				8:  {patterns: [include: "etc#semi"]}, 9:  {name: "constant.other.bidi-category.ucd.unidata"}
				10: {patterns: [include: "etc#semi"]}, 11: {name: "meta.decomposition.ucd.unidata", patterns: [include: "#decomp"]}
				12: {patterns: [include: "etc#semi"]}, 13: {name: "constant.numeric.value.decimal.ucd.unidata"}
				14: {patterns: [include: "etc#semi"]}, 15: {name: "constant.numeric.value.digit.ucd.unidata"}
				16: {patterns: [include: "etc#semi"]}, 17: {name: "constant.numeric.value.number.ucd.unidata"}
				18: {patterns: [include: "etc#semi"]}, 19: {name: "constant.language.boolean.is-mirrored.ucd.unidata"}
				20: {patterns: [include: "etc#semi"]}, 21: {name: "entity.name.character.unicode1-name.ucd.unidata"}
				22: {patterns: [include: "etc#semi"]}, 23: {name: "string.unquoted.iso10646-comment.ucd.unidata"}
				24: {patterns: [include: "etc#semi"]}, 25: {name: "constant.numeric.mapping.uppercase.ucd.unidata"}
				26: {patterns: [include: "etc#semi"]}, 27: {name: "constant.numeric.mapping.lowercase.ucd.unidata"}
				28: {patterns: [include: "etc#semi"]}, 29: {name: "constant.numeric.mapping.titlecase.ucd.unidata"}
		}]


	# Unified CJK ideographs
	USourceData:
		name:  "meta.usource-data.ucd.unidata"
		begin: "(?:\\G|\\A|(?:^|(?<=\\n)))(?=# USourceData(?:-\\d+(?:\\.\\d+)*+)?\\.txt\\s*$)"
		end:   "(?=A)B"
		patterns: [{
			name: "meta.record.unified-ideograph.ucd.unidata"
			match: """(?x) ^
				([^;]*) (;) # U-source ID
				([^;]*) (;) # Approval status
				([^;]*) (;) # Unicode representation
				([^;]*) (;) # Radical stroke count
				([^;]*) (;) # Virtual KangXi dictionary position
				([^;]*) (;) # Ideographic description sequence (IDS)
				([^;]*) (;) # Source(s)
				(.*)        # General comments
			"""
			captures:
				1:  name: "entity.name.usource-id.ucd.unidata"
				2:  patterns: [include: "etc#semi"]
				3:  name: "constant.language.status.ucd.unidata"
				4:  patterns: [include: "etc#semi"]
				5:  patterns: [include: "#codePoint"]
				6:  patterns: [include: "etc#semi"]
				7:  patterns: [include: "etc#num"]
				8:  patterns: [include: "etc#semi"]
				9:  patterns: [include: "etc#num"]
				10: patterns: [include: "etc#semi"]
				11: name: "string.unquoted.ids.ucd.unidata"
				12: patterns: [include: "etc#semi"]
				13: name: "constant.other.reference.link.unidata"
				14: patterns: [include: "etc#semi"]
				15: name: "comment.line.field.ucd.unidata"
		}, include: "#comment"]
